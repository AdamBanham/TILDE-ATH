import blah BLAH;
print please enter whatever character you will be using for binary zero.;
INPUT ZEROCHAR;
BIFURCATE ZEROCHAR[ZEROCHAR,JUNK];
import chrcmp CMP0;
BIFURCATE [CMP0,ZEROCHAR]D;
D.DIE();
print please enter whatever character you will be using for binary one.;
INPUT ONECHAR;
BIFURCATE ONECHAR[ONECHAR,JUNK];
import chrcmp CMP1;
BIFURCATE [CMP1,ONECHAR]D;
D.DIE();
BIFURCATE [NULL,NULL]2NULL;
BIFURCATE 2NULL[OUTNUM,JUNK];
print please input the first binary number you want.(it will be converted to unary);
INPUT BINNUM;
~ATH(BINNUM){
BIFURCATE [OUTNUM,OUTNUM]G;
BIFURCATE G[NCOPY,OUTNUM];
~ATH(NCOPY){
BIFURCATE NCOPY[JUNK,NCOPY];
BIFURCATE [BLAH,OUTNUM]OUTNUM;
} 
BIFURCATE BINNUM[CHAR,BINNUM];
BIFURCATE [CMP0,CHAR]NEQ0;
~ATH(NEQ0){
BIFURCATE [BLAH,OUTNUM]OUTNUM;
BIFURCATE 2NULL[NEQ0,JUNK];
}
}
BIFURCATE [BLAH,OUTNUM]UINNUM1;
BIFURCATE UINNUM1[JUNK,UINNUM1];
print input the second binary number:;
INPUT BINNUM;
~ATH(BINNUM){
BIFURCATE [OUTNUM,OUTNUM]G;
BIFURCATE G[NCOPY,OUTNUM];
~ATH(NCOPY){
BIFURCATE NCOPY[JUNK,NCOPY];
BIFURCATE [BLAH,OUTNUM]OUTNUM;
} 
BIFURCATE BINNUM[CHAR,BINNUM];
BIFURCATE [CMP0,CHAR]NEQ0;
~ATH(NEQ0){
BIFURCATE [BLAH,OUTNUM]OUTNUM;
BIFURCATE 2NULL[NEQ0,JUNK];
}
}
BIFURCATE [BLAH,OUTNUM]UINNUM2;
BIFURCATE UINNUM2[JUNK,UINNUM2];
BIFURCATE [UINNUM1,UINNUM1]CUINNUM1;
BIFURCATE CUINNUM1[SUM,JUNK];//haha, some junk
BIFURCATE [UINNUM2,UINNUM2]CUINNUM2;
BIFURCATE CUINNUM2[UINNUM2CPY,JUNK];
~ATH(UINNUM2CPY){
BIFURCATE UINNUM2CPY[JUNK,UINNUM2CPY];
BIFURCATE [BLAH,SUM]SUM;
}
print ok, going to print the sum out in unary, with each digit on one line. If the numbers you entered were large you might want to close the program instead of hitting enter.;
INPUT JUNK;
BIFURCATE [SUM,SUM]GSUM;
BIFURCATE GSUM[SUMCOPY,JUNK];
~ATH(SUMCOPY){
BIFURCATE SUMCOPY[JUNK,SUMCOPY];
print 1;
}
